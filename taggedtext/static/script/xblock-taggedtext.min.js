function TaggedTextXBlockStudio(a,b){$(function(){var c=new TaggedText.Server(a,b),d=new TaggedText.StudioView(c,a,b);d.render()})}function TaggedTextXBlockStudent(a,b){$(function(){var c=new TaggedText.Server(a,b),d=new TaggedText.StudentView(c,a,b);d.render()})}"undefined"!=typeof TaggedText&&TaggedText||(TaggedText={}),TaggedText.Server=function(){this.constructor.apply(this,arguments)},TaggedText.Server.prototype={constructor:function(a,b){this.runtime=a,this.element=b},url:function(a){return this.runtime.handlerUrl(this.element,a)},selectCategory:function(a){var b=this.url("select_category"),c=JSON.stringify({keyword:a.keyword,category:a.category});return $.Deferred(function(a){$.ajax({type:"POST",url:b,data:c}).done(function(b){b.success?a.resolve():a.rejectWith(this,[b.msg])}).fail(function(){a.rejectWith(this,["Could not save the selected category"])})}).promise()},updateXml:function(a){var b=this.url("update_xml"),c=JSON.stringify({xml:a});return $.Deferred(function(a){$.ajax({type:"POST",url:b,data:c}).done(function(b){b.success?a.resolve():a.rejectWith(this,[b.msg])}).fail(function(){a.rejectWith(this,["This problem could not be saved."])})}).promise()},loadXml:function(){var a=this.url("xml");return $.Deferred(function(b){$.ajax({type:"POST",url:a,data:JSON.stringify(null)}).done(function(a){a.success?b.resolveWith(this,[a.xml]):b.rejectWith(this,[a.msg])}).fail(function(){b.rejectWith(this,["This problem could not be loaded."])})}).promise()}},TaggedText.StudioView=function(){this.constructor.apply(this,arguments)},TaggedText.StudioView.prototype={constructor:function(a,b,c){this.runtime=b,this.server=a,this.element=$(c),this.xmlEditor=null},load:function(){var a=this;this.server.loadXml().done(function(b){a.xmlEditor.setValue(b)}).fail(function(b){a.showError(b)})},save:function(){if(!this.xmlEditor)return void this.showError("View not rendered yet, cannot save");var a=this.xmlEditor.getValue();this.runtime.notify("save",{state:"start"});var b=this;this.server.updateXml(a).done(function(){b.runtime.notify("save",{state:"end"}),b.load()}).fail(function(a){b.showError(a)})},cancel:function(){this.runtime.notify("cancel",{})},showError:function(a){this.runtime.notify("error",{msg:a})},setupEvents:function(){var a=this;this.element.find(".taggedtext-save-button").click(function(){a.save()}),this.element.find(".taggedtext-cancel-button").click(function(){a.cancel()})},render:function(){this.xmlEditor=CodeMirror.fromTextArea(this.element.find(".taggedtext-editor").get(0),{mode:"xml",lineNumbers:!0,lineWrapping:!0}),this.setupEvents(),this.load()}},TaggedText.StudentView=function(){this.constructor.apply(this,arguments)},TaggedText.StudentView.prototype={constructor:function(a,b,c){this.runtime=b,this.server=a,this.element=$(c)},setupEvents:function(){var a=this,b=this.element.find(".keyword");b.click(function(){$(this).toggleClass("active").find(".dropdown").toggle(),b.not(this).removeClass("active").find(".dropdown").hide()}),this.element.find(".dropdown > li").click(function(){var b=$(this),c=b.find("span"),d=b.closest(".keyword");a.server.selectCategory({keyword:d.data("position"),category:b.data("id")}).done(function(){d.css({"background-color":c.css("background-color")})}).fail(function(){})})},render:function(){this.setupEvents()}};